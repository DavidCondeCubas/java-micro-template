openapi: 3.0.3
info:
  title: CheckYourTicket - OpenAPI 3.0
  description: |-
    This is the CheckYourTicket Server based on the OpenAPI 3.0 specification.
  termsOfService: http://swagger.io/terms/
  contact:
    email: davidcondecubas@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: https://davidcondecubas.es/api/v1
tags:
  - name: pets
    description: Operations about pet
  - name: users
  - name: auth

paths:
  /auth/login:
    get:
      tags:
        - auth
      security:
        - basicAuth: []
      responses:
        '200':
          description: login successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '401':
          description: Unauthorized
  /pets:
    get:
      tags:
        - pets
      summary: Finds all pets
      description: This allow get all pets
      operationId: getPets
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
  /users:
    post:
      tags:
        - users
      summary: Add a new user
      description: Add a new user
      operationId: addUser
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /users/{userId}:
    parameters:
      - name: userId
        in: path
        description: ID of user to return
        required: true
        schema:
          type: integer
          format: int64
    get:
      tags:
        - users
      summary: Finds usdr by id
      description: This allow get a user
      operationId: getUserById
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid status value
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    AccessToken:
      type: object
      properties:
        access-token:
          type: string
          example: thePet
    Pet:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: thePet
    User:
      required:
        - firstname
        - lastname
        - password
        - email
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        firstname:
          type: string
          example: david
        lastname:
          type: string
          example: conde
        password:
          type: string
          example: 123456
        email:
          type: string
          example: thePet
        isAdmin:
          type: boolean
          default: false
          example: false
        isBlocked:
          type: boolean
          default: false
          example: false
security:
  - bearerAuth: []